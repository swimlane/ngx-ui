/* CSS based on flexboxgrid Copyright 2013 Kristofer Joseph */

@use './_mixins.scss' as mixins;
@use './_flex-vars.scss' as flex-vars;

/* --- CSS Variables --- */

:root {

  // Spacing Gaps
  --spacing-0: 0px;
  --spacing-2: 2px;
  --spacing-4: 4px;
  --spacing-8: 8px;
  --spacing-10: 10px;
  --spacing-12: 12px;
  --spacing-16: 16px;
  --spacing-20: 20px;
  --spacing-24: 24px;
  --spacing-30: 30px;
  --spacing-36: 36px;
  --spacing-48: 48px;

  // Radius Gaps
  --radius-0: 0px;
  --radius-2: 2px;
  --radius-4: 4px;
  --radius-6: 6px;
  --radius-8: 8px;
  --radius-1000: 1000px;


  // Swimlane New Spacing Styles
  /* Swimlane Pool House - Default */
  --spacing-xs: var(--spacing-2);
  --spacing-s: var(--spacing-4);
  --spacing-m: var(--spacing-8);
  --spacing-l: var(--spacing-12);
  --spacing-xl: var(--spacing-16);
  --spacing-xxl: var(--spacing-20);
  --spacing-3xl: var(--spacing-24);
  --spacing-4xl: var(--spacing-36);

  /* Swimlane Pool House - Tight */
  --spacing-xs: 0px;
  --spacing-s: var(--spacing-2);
  --spacing-m: var(--spacing-4);
  --spacing-l: var(--spacing-8);
  --spacing-xl: var(--spacing-12);
  --spacing-xxl: var(--spacing-16);
  --spacing-3xl: var(--spacing-20);
  --spacing-4xl: var(--spacing-24);

  /* Swimlane Pool House - Loose */
  --spacing-xs: var(--spacing-4);
  --spacing-s: var(--spacing-8);
  --spacing-m: var(--spacing-12);
  --spacing-l: var(--spacing-16);
  --spacing-xl: var(--spacing-20);
  --spacing-xxl: var(--spacing-24);
  --spacing-3xl: var(--spacing-36);
  --spacing-4xl: var(--spacing-48);

  
  // columns
  --columns: 12;
  --column-width: calc(100% / var(--columns));

  // gutters
  --gutter-width: 1rem;
  --outer-margin: 2rem;
  --gutter-compensation: calc((var(--gutter-width) * 0.5) * -1);
  --half-gutter-width: calc((var(--gutter-width) * 0.5));

  // containers
  @each $modifier, $width in flex-vars.$container-widths {
    --container#{$modifier}: calc(#{$width} + var(--gutter-width));
  }
}

/* --- Containers --- */

// default container is fluid
#{flex-vars.$container-class},
#{flex-vars.$container-class}-fluid {
  padding-right: var(--outer-margin, 2rem);
  padding-left: var(--outer-margin, 2rem);
}

#{flex-vars.$container-class},
#{flex-vars.$container-class}-fluid,
#{flex-vars.$container-class}-fixed {
  margin-right: auto;
  margin-left: auto;
}

/* --- Rows --- */

#{flex-vars.$row-class} {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;

  margin-right: var(--gutter-compensation, -0.5rem);
  margin-left: var(--gutter-compensation, -0.5rem);

  &.reverse {
    flex-direction: row-reverse;
  }

  @include mixins.modifiers('');

  // defualt columns
  & > * {
    @include mixins.col-base();
    flex: 1 1 auto;

    @include mixins.modifiers('');

    &.reverse {
      flex-direction: column-reverse;
    }
  }
}

/* --- Columns --- */

@each $modifier, $breakpoint in flex-vars.$breakpoints {
  @media screen and (min-width: $breakpoint) {
    #{flex-vars.$container-class}-fixed {
      width: var(--container#{$modifier});
    }

    #{flex-vars.$row-class} > {
      @include mixins.create-col-classes($modifier);
    }
  }
}
