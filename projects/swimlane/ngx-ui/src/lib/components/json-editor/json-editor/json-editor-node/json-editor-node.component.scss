@use 'sass:color';
@use 'colors/colors' as colors;
@use '../json-editor.variables' as json-editor;

.json-tree-node {
  padding: var(--spacing-0);
  margin-left: var(--spacing-24);
  margin-bottom: var(--spacing-0);
  position: relative;
  white-space: nowrap;

  &.inline {
    display: inline-block;
    margin-bottom: var(--spacing-0);
    vertical-align: top;
    width: calc(100% - 290px);

    &::before {
      position: absolute;
      content: '=';
      left: -19px;
      font-size: 20px;
      color: var(--grey-500);
    }

    &.inline {
      .error-icon {
        left: initial;
        right: -22px;
        top: 5px;
      }
    }
  }

  .btn {
    cursor: pointer;
  }

  .ngx-expander {
    font-size: 0.75rem;
    color: var(--grey-200);
    position: absolute;
    top: -25px;
    left: -26px;
    z-index: 1;
    user-select: none;

    &:not(.disabled) {
      cursor: pointer;
    }

    &.ngx-tree-collapse::before,
    &.ngx-tree-expand::before {
      background: var(--grey-800);
      border-radius: 50%;
    }

    &.invalid {
      color: colors.$color-error;
    }
  }

  .add-button {
    position: relative;
    left: 20px;
    width: 21px;
    height: 21px;
    padding: var(--spacing-2) 3px;
    background: var(--grey-300);

    ngx-icon {
      color: var(--grey-800);
    }

    &::before {
      content: ' ';
      width: 15px;
      height: 1px;
      border-radius: var(--radius-6);
      background: none;
      border-top: dashed 1px json-editor.$color-tree-line;
      position: absolute;
      top: 50%;
      left: -15px;
    }
  }

  .ngx-tree-vr {
    position: absolute;
    top: -4px;
    bottom: 14px;
    left: 5px;
    border-left: dashed 1px json-editor.$color-tree-line;
    width: 1px;
  }

  .property-def {
    border: 1px solid json-editor.$color-node-item-border;
    height: 30px;
    display: inline-block;
    margin-left: var(--spacing-20);
    position: relative;
    background: json-editor.$color-node-item-bg;

    &::before {
      content: ' ';
      width: 15px;
      height: 1px;
      border-radius: var(--radius-6);
      background: none;
      border-top: dashed 1px json-editor.$color-tree-line;
      position: absolute;
      top: 50%;
      left: -15px;
    }

    .type-icon {
      width: 28px;
      height: 28px;
      position: relative;
      background: json-editor.$color-icon-type-bg;
      ngx-icon {
        color: json-editor.$color-icon-type;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 16px;
        height: 16px;
      }
      margin-left: var(--spacing-0);
      display: inline-block;

      &:hover {
        background: rgba(var(--blue-200), 0.1);
      }
    }

    .property-name {
      display: inline-block;
      width: 170px;
      padding: var(--spacing-0) var(--spacing-4);
      position: relative;
      transform: translateY(-50%);
      vertical-align: middle;

      .title {
        display: inline-block;
        color: var(--grey-400);
        width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        position: relative;
        top: 5px;
      }

      input {
        border: none;
        background: transparent;
        color: var(--grey-150);
        width: calc(100% - 5px);
        line-height: 20px;
        font-size: 14px;
      }
    }
  }

  .error-icon {
    position: absolute;
    top: -28px;
    left: 205px;
    color: colors.$color-error;
  }

  *:not(ngx-input).value-input,
  ngx-input.value-input .ngx-input-wrap .ngx-input-box-wrap .ngx-input-box {
    border: 1px solid json-editor.$color-node-item-border;
    background: json-editor.$color-node-item-bg;
    color: var(--grey-150);
    width: 100%;
    height: 30px;
    padding: var(--spacing-4);
    border-radius: var(--radius-0);
    margin: var(--spacing-0);

    &.select * {
      background-color: var(--grey-700);
    }

    &.code {
      width: 100%;
      overflow: hidden;

      .code-display {
        white-space: pre-wrap;
        font-family: 'Courier New', Courier, monospace;
        font-size: 14px;
      }

      .edit-code-icon {
        position: absolute;
        right: 10px;
        top: 4px;
        z-index: 21;
        cursor: pointer;
        display: none;

        &:hover {
          color: white;
        }
      }

      &:hover {
        height: auto;
        overflow: auto;
        max-height: 400px;
        min-height: 30px;
        position: absolute;
        z-index: 20;
        background: var(--grey-775);

        .edit-code-icon {
          display: inline;
        }
      }
    }
  }

  ngx-input.value-input {
    margin: var(--spacing-0);

    .ngx-input-label,
    .ngx-input-underline,
    .ngx-input-hint {
      display: none;
    }
  }

  .ngx-toggle {
    margin: var(--spacing-0);
    line-height: 30px;

    .ngx-toggle-text {
      color: var(--grey-150);
    }
  }

  .invalid {
    > div > .value-input {
      border: 1px solid colors.$color-error;
    }
  }
}
